// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Genres$ReactTemplate = require("./Genres.bs.js");

function genre(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, json),
          /* name */Json_decode.field("name", Json_decode.string, json)
        ];
}

function movie(json) {
  var __x = Json_decode.field("genres", (function (param) {
          return Json_decode.array(genre, param);
        }), json);
  return /* record */[
          /* title */Json_decode.field("original_title", Json_decode.string, json),
          /* genres */Belt_Array.map(__x, (function (g) {
                  return g[/* name */1];
                }))
        ];
}

var Decode = /* module */[
  /* genre */genre,
  /* movie */movie
];

var searchUrl = "https://api.themoviedb.org/3/movie/76341?api_key=cee134a9d530ca1dc02dd7058c66352f";

var component = ReasonReact.reducerComponent("MovieList");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* MovieFetch */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1];
              var tmp;
              if (typeof match === "number") {
                tmp = match !== 0 ? React.createElement("div", undefined, "An error occurred!") : React.createElement("div", undefined, "Loading...");
              } else {
                var movie = match[0];
                tmp = React.createElement("div", undefined, React.createElement("h1", undefined, "Movie"), movie[/* title */0], React.createElement("ul", undefined, Belt_Array.map(movie[/* genres */1], (function (g) {
                                return React.createElement("p", {
                                            key: g
                                          }, g);
                              }))));
              }
              return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, Genres$ReactTemplate.make(/* array */[])), tmp);
            }),
          /* initialState */(function (_state) {
              return /* Loading */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* Update */Block.__(0, [/* Error */1]);
                } else {
                  return /* UpdateWithSideEffects */Block.__(2, [
                            /* Loading */0,
                            (function (self) {
                                fetch(searchUrl).then((function (prim) {
                                            return prim.json();
                                          })).then((function (json) {
                                          var movie$1 = movie(json);
                                          return Promise.resolve(Curry._1(self[/* send */3], /* MovieFetched */[movie$1]));
                                        })).catch((function (_err) {
                                        console.log(_err);
                                        return Promise.resolve(Curry._1(self[/* send */3], /* MovieFailedToFetch */1));
                                      }));
                                return /* () */0;
                              })
                          ]);
                }
              } else {
                return /* Update */Block.__(0, [/* Loaded */[action[0]]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.Decode = Decode;
exports.searchUrl = searchUrl;
exports.component = component;
exports.make = make;
/* component Not a pure module */
